

snippet main "Program main" b
PROGRAM ${1:MAIN}

END PROGRAM $1
endsnippet

snippet impl
	IMPLICIT NONE
		$0
endsnippet


snippet prog
	PROGRAM ${1:MAIN}
		$0
	END PROGRAM $1
endsnippet

snippet mod
	MODULE ${1:MODULENAME}
		$0
	END MODULE $1
endsnippet


snippet proc
	PROCEDURE ${1:NAME}
		${0}
	END PROCEDURE $1
endsnippet


snippet iface
	INTERFACE ${1:NAME}
		${0}
	END INTERFACE $1
endsnippet

# Variables definitions
# Boolean
snippet bool
	LOGICAL :: $0
endsnippet


# Integer
snippet int
	INTEGER :: $0
endsnippet


snippet real
	REAL :: $0
endsnippet


# Double Precision
snippet double
	DOUBLE PRECISION :: $0
endsnippet


# Char
snippet char
	CHARACTER(LEN=${1:*}) :: ${0:}
endsnippet


# Types
snippet type
	TYPE(${1:NAME})
		$0
	END TYPE
endsnippet


snippet const
	${1:TYPE}, PARAMETER :: $2 = $0
endsnippet


snippet arr
	${1:TYPE}, ALLOCATABLE, DIMENSION(${2::}) :: $0
endsnippet


snippet intent
	${1:TYPE}, INTENT(INOUT) :: $0
endsnippet


# Array
snippet /
	(/ $1 /) ${2:,&} $0
endsnippet


snippet if
	IF (${1:CONDITION}) THEN
		$2
	END IF
endsnippet


snippet case
	SELECT CASE (${1:expr})
		CASE ($2)
		CASE DEFAULT
			$3
	END SELECT $0
endsnippet


snippet do
	DO ${1:I} = ${2:START},${3:END}, ${4:INCR}
		$4
	END DO
endsnippet


snippet dow
	DO WHILE (${1:condition})
		$2
	END DO
endsnippet


snippet sub
	SUBROUTINE ${1:NAME}($2)
		$0
	END SUBROUTINE $1
endsnippet


snippet func
	FUNCTION ${1:NAME}($2) RESULT($3)
		$0
	END FUNCTION $1
endsnippet


snippet pr
	WRITE(*,*) $0
endsnippet


snippet read
	READ( UNIT = ${1:FP}, FILE = ${2:FILENAME}${3:, IOSTAT = IERR }) $0
endsnippet


snippet write
	WRITE( UNIT = ${1:FP}, FILE = ${2:FILENAME}${3:, IOSTAT = IERR }) $0
endsnippet


snippet open
	OPEN (UNIT = ${1:FP}, FILE = ${2:FILENAME}, STATUS = UNKNOWN${3:, IOSTAT = IERR }) $0
endsnippet


snippet close
	CLOSE ( UNIT = ${1:FP} ) $0
endsnippet
